# .github/workflows/ci.yml
name: PyK8s-Lab CI

on:
  push:
    branches: [ * ]
  pull_request:
    branches: [ * ]

jobs:
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          pip install flake8
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run backend linter (flake8)
        run: flake8 backend

      - name: Run frontend linter (eslint)
        working-directory: ./frontend
        run: npm run lint

  backend-tests:
    name: Run Backend Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: pyk8s_db_test
        ports:
          - 5433:5432 # Use a different host port to avoid conflicts
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: pip install -r backend/requirements.txt

      - name: Run backend tests
        env:
          TEST_DATABASE_URL: postgresql://user:password@localhost:5433/pyk8s_db_test
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: pytest backend/tests

  e2e-tests:
    name: Run End-to-End Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment file
        run: ./scripts/set_env.sh

      - name: Start services using Docker Compose
        run: docker-compose up -d --build

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for backend..."
          while ! curl -s http://localhost:8000/ > /dev/null; do sleep 1; done
          echo "Waiting for frontend..."
          while ! curl -s http://localhost:3000/ > /dev/null; do sleep 1; done
          echo "Services are up!"

      - name: Install Playwright dependencies
        working-directory: ./e2e
        run: npm install

      - name: Install Playwright browsers
        working-directory: ./e2e
        run: npx playwright install --with-deps

      - name: Run E2E tests
        working-directory: ./e2e
        run: npm test
      
      - name: Upload E2E test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 7
